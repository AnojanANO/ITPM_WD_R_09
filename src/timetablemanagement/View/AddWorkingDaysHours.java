package timetablemanagement.View;

import timetablemanagement.Database.DBconnecter;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import javax.swing.JOptionPane;



/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author DELL'
 */
public class AddWorkingDaysHours extends javax.swing.JFrame {

    
    Connection con=null;
    /**
     * Creates new form AddWorkingDaysHours
     */
    public AddWorkingDaysHours() {
        initComponents();
        aaa.setSelected(true);
        con=DBconnecter.connection();
    }

     private void Clear(){
       
        workingDays.setValue(0);
         mon.setSelected(false);
         tue.setSelected(false);
         wed.setSelected(false);
         thu.setSelected(false);
         fri.setSelected(false);
         sat.setSelected(false);
         sun.setSelected(false);
                
         Hour.setValue(0);
         mini.setValue(0);
        
         
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        buttonGroup1 = new javax.swing.ButtonGroup();
        jInternalFrame1 = new javax.swing.JInternalFrame();
        aaa = new javax.swing.JCheckBox();
        jLabel8 = new javax.swing.JLabel();
        panel = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        tue = new javax.swing.JCheckBox();
        wed = new javax.swing.JCheckBox();
        thu = new javax.swing.JCheckBox();
        fri = new javax.swing.JCheckBox();
        sat = new javax.swing.JCheckBox();
        sun = new javax.swing.JCheckBox();
        jLabel3 = new javax.swing.JLabel();
        Hour = new javax.swing.JSpinner();
        jLabel4 = new javax.swing.JLabel();
        mini = new javax.swing.JSpinner();
        workingDays = new javax.swing.JSpinner();
        jLabel5 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        btnUpdate = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        mon = new javax.swing.JCheckBox();
        jLabel7 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();

        jInternalFrame1.setVisible(true);

        javax.swing.GroupLayout jInternalFrame1Layout = new javax.swing.GroupLayout(jInternalFrame1.getContentPane());
        jInternalFrame1.getContentPane().setLayout(jInternalFrame1Layout);
        jInternalFrame1Layout.setHorizontalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );
        jInternalFrame1Layout.setVerticalGroup(
            jInternalFrame1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 0, Short.MAX_VALUE)
        );

        aaa.setText("jCheckBox1");

        jLabel8.setText("jLabel8");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setPreferredSize(new java.awt.Dimension(600, 350));
        getContentPane().setLayout(null);

        panel.setBackground(java.awt.SystemColor.activeCaption);
        panel.setBorder(javax.swing.BorderFactory.createTitledBorder("Add Working Days Hours"));
        panel.setLayout(null);

        jLabel1.setText("ADD WORKING DAYS HOURS");
        panel.add(jLabel1);
        jLabel1.setBounds(210, 10, 200, 28);

        jLabel2.setText("Working Days");
        panel.add(jLabel2);
        jLabel2.setBounds(10, 100, 120, 14);

        tue.setText("Tuesday");
        tue.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                tueActionPerformed(evt);
            }
        });
        panel.add(tue);
        tue.setBounds(240, 90, 81, 23);

        wed.setLabel("Wednesday");
        wed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                wedActionPerformed(evt);
            }
        });
        panel.add(wed);
        wed.setBounds(330, 90, 100, 23);

        thu.setLabel("Thursday");
        panel.add(thu);
        thu.setBounds(440, 90, 81, 23);

        fri.setLabel("Friday");
        panel.add(fri);
        fri.setBounds(520, 90, 81, 23);

        sat.setText("Saturday");
        panel.add(sat);
        sat.setBounds(150, 130, 81, 23);

        sun.setText("Sunday");
        panel.add(sun);
        sun.setBounds(240, 130, 81, 23);

        jLabel3.setText("Working Time Per Day");
        panel.add(jLabel3);
        jLabel3.setBounds(10, 200, 140, 14);

        Hour.setModel(new javax.swing.SpinnerNumberModel(0, 0, 23, 1));
        panel.add(Hour);
        Hour.setBounds(150, 190, 80, 30);

        jLabel4.setText("Hours");
        panel.add(jLabel4);
        jLabel4.setBounds(250, 200, 60, 14);

        mini.setModel(new javax.swing.SpinnerNumberModel(0, 0, 59, 15));
        panel.add(mini);
        mini.setBounds(310, 190, 85, 30);

        workingDays.setModel(new javax.swing.SpinnerNumberModel(0, 0, 7, 1));
        workingDays.addChangeListener(new javax.swing.event.ChangeListener() {
            public void stateChanged(javax.swing.event.ChangeEvent evt) {
                changeValefromSpinner(evt);
            }
        });
        workingDays.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                workingDaysKeyPressed(evt);
            }
        });
        panel.add(workingDays);
        workingDays.setBounds(150, 30, 51, 30);

        jLabel5.setText("Minutes");
        panel.add(jLabel5);
        jLabel5.setBounds(410, 200, 80, 14);

        jButton1.setText("Back");
        panel.add(jButton1);
        jButton1.setBounds(100, 250, 84, 23);

        btnUpdate.setText("add");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });
        panel.add(btnUpdate);
        btnUpdate.setBounds(210, 250, 85, 23);

        jButton3.setText("Delete All");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        panel.add(jButton3);
        jButton3.setBounds(400, 250, 85, 23);

        jButton4.setText("update");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        panel.add(jButton4);
        jButton4.setBounds(310, 250, 85, 23);

        mon.setText("Monday");
        mon.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                monActionPerformed(evt);
            }
        });
        panel.add(mon);
        mon.setBounds(150, 90, 80, 23);

        jLabel7.setText("No of Working Days");
        panel.add(jLabel7);
        jLabel7.setBounds(10, 30, 140, 28);

        jLabel6.setText("jLabel6");
        panel.add(jLabel6);
        jLabel6.setBounds(0, 0, 610, 320);

        getContentPane().add(panel);
        panel.setBounds(0, 0, 610, 320);

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void tueActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_tueActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_tueActionPerformed

    private void wedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_wedActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_wedActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
                try {
            PreparedStatement st1=con.prepareStatement("DELETE FROM `add working days hours`");
             int count=st1.executeUpdate();
            if(count>0){
               JOptionPane.showMessageDialog(null, "Succesfully deleted");
               
               Clear();
            }
                    
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null,e.getMessage());
        }
                                           

    }//GEN-LAST:event_jButton3ActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
       
            String word="";
            int count=Integer.parseInt(workingDays.getValue().toString());
            int a=0;
         try {
            
              int s1=Integer.parseInt(workingDays.getValue().toString());
            int s2=Integer.parseInt(Hour.getValue().toString());
            int s3=Integer.parseInt(mini.getValue().toString());
            if(word==null|| s2==0||s3==0||Integer.parseInt(workingDays.getValue().toString())==0){
                 JOptionPane.showMessageDialog(null, " please Enter the all colums");
                 throw new Exception();
            }
             if(mon.isSelected()){
                 if(a>=count || a<=count){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                       System.out.println("running1 ex");
                      throw new Exception("Exception message");
                 }
                 
                  System.out.println("running1 rr");
                 word=word+mon.getText()+",";
                 a=a+1;
             }
             if(tue.isSelected()){
                 if(a>=count  ){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      throw new Exception("Exception message");
                 }
                 word=word+tue.getText()+",";
                 a=a+1;
             }
             if(wed.isSelected()){
                 if(a>=count  ){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                     throw new Exception("Exception message");
                 }
                 word=word+wed.getText()+",";
                 a=a+1;
             }
             if(thu.isSelected()){
                 if(a>=count ){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      throw new Exception("Exception message");
                 }
                 word=word+thu.getText()+",";
                 a=a+1;
             }
             if(fri.isSelected()){
                 if(a>=count  ){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      throw new Exception("Exception message");
                 }
                 word=word+fri.getText()+",";
                 a=a+1;
             }
             if(sat.isSelected()){
                 if(a>=count ){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      throw new Exception("Exception message");
                 }
                 word=word+sat.getText()+",";
                 a=a+1;
             }
             if(sun.isSelected()){
                 if(a>=count  ){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      throw new Exception("Exception message");
                 }
                 word=word+sun.getText()+",";
                 a=a+1;
             }
             
              
             
            PreparedStatement st=con.prepareStatement("INSERT INTO `add working days hours`(`No of working days`, `Working days`, `Working time per day hours`, `Working time per day Minutes`)  VALUES (?,?,?,?)");
             
            String a1=workingDays.getValue().toString();
            st.setString(1, a1);
            st.setString(2,word);
            String b=Hour.getValue().toString();
            st.setString(3, b);
            String c=mini.getValue().toString();
            st.setString(4,c);
           
            int count1=st.executeUpdate();
            if(count1>0){
               JOptionPane.showMessageDialog(null, "Workingday is inserted");
               Clear();
               
            }

             
        } catch (Exception e) {
            
             JOptionPane.showMessageDialog(null,"Workingday is not inserted" );
           
        }    
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void workingDaysKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_workingDaysKeyPressed

    }//GEN-LAST:event_workingDaysKeyPressed

    private void changeValefromSpinner(javax.swing.event.ChangeEvent evt) {//GEN-FIRST:event_changeValefromSpinner
                
       
                
        try {
             System.out.println(workingDays.getValue().toString());
             if(!(Integer.valueOf(workingDays.getValue().toString())==0)){
                 
                mon.setSelected(false);
                tue.setSelected(false);
                wed.setSelected(false);
                thu.setSelected(false);
                fri.setSelected(false);
                sat.setSelected(false);
                sun.setSelected(false);
                Hour.setValue(0);
                mini.setValue(0);
            PreparedStatement st1=con.prepareStatement("SELECT `No of working days`,`Working days`,`Working time per day hours`,`Working time per day Minutes` FROM `add working days hours` WHERE `No of working days`="+workingDays.getValue().toString()+"");
            
            ResultSet rs1=st1.executeQuery();
            while(rs1.next()){
                
                Hour.setValue(Integer.valueOf(rs1.getString(3)));
                mini.setValue(Integer.valueOf(rs1.getString(4)));
                String days =rs1.getString(2);
                System.out.println(days);
                workingDays.setValue(Integer.valueOf(rs1.getString(1)));
                mon.setSelected(false);
                tue.setSelected(false);
                wed.setSelected(false);
                thu.setSelected(false);
                fri.setSelected(false);
                sat.setSelected(false);
                sun.setSelected(false);
                if(days.contains("Monday")){
                   mon.setSelected(true);
                   
                }
                
                if(days.contains("Tuesday")){
                    tue.setSelected(true);
                  
                }
               
                if(days.contains("Wednesday")){
                    wed.setSelected(true);
                    
                }
                if(days.contains("Thursday")){
                    thu.setSelected(true);
                  
                }
                if(days.contains("Friday")){
                    fri.setSelected(true);
                   
                }
                if(days.contains("Saturday")){
                    sat.setSelected(true);
                   
                }
                if(days.contains("Sunday")){
                    sun.setSelected(true);
                    
                }
                System.out.println(days);
               
                
            }
            
             }else{  
               Clear();
             }
             
        } catch (Exception e) {
             e.printStackTrace();
             
        }
     
       

    }//GEN-LAST:event_changeValefromSpinner

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
         String word="";
            int count=Integer.parseInt(workingDays.getValue().toString());
            int a=0;
         try {
             int s1=Integer.parseInt(workingDays.getValue().toString());
            int s2=Integer.parseInt(Hour.getValue().toString());
            int s3=Integer.parseInt(mini.getValue().toString());
            if(word==null|| s2==0||s3==0||Integer.parseInt(workingDays.getValue().toString())==0){
                 JOptionPane.showMessageDialog(null, " please Enter the all colums");
                 throw new Exception();
            }
             if(mon.isSelected()){
                 if(a>=count){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                    
                      Clear();
                     throw new Exception("Exception message");
                 }
                  System.out.println("running1 1");
                 word=word+mon.getText()+",";
                 a=a+1;
             }
             if(tue.isSelected()){
                 if(a>=count){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      Clear();
                     throw new Exception("Exception message");
                 }
                 word=word+tue.getText()+",";
                 a=a+1;
             }
             if(wed.isSelected()){
                 if(a>=count){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      Clear();
                     throw new Exception("Exception message");
                 }
                 word=word+wed.getText()+",";
                 a=a+1;
             }
             if(thu.isSelected()){
                 if(a>=count){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      Clear();
                     throw new Exception("Exception message");
                 }
                 word=word+thu.getText()+",";
                 a=a+1;
             }
             if(fri.isSelected()){
                 if(a>=count){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      Clear();
                     throw new Exception("Exception message");
                 }
                 word=word+fri.getText()+",";
                 a=a+1;
             }
             if(sat.isSelected()){
                 if(a>=count){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      Clear();
                     throw new Exception("Exception message");
                 }
                 word=word+sat.getText()+",";
                 a=a+1;
             }
             if(sun.isSelected()){
                 if(a>=count){
                     JOptionPane.showMessageDialog(null,"only select "+count+" days" );
                      Clear();
                    throw new Exception("Exception message");
                 }
                 word=word+sun.getText()+",";
                 a=a+1;
             }
             
            PreparedStatement st=con.prepareStatement("UPDATE `add working days hours` SET `Working days`=?,`Working time per day hours`=?,`Working time per day Minutes`=? WHERE `No of working days`="+workingDays.getValue().toString()+"");
             
            
            st.setString(1,word);
            String b=Hour.getValue().toString();
            st.setString(2, b);
            String c=mini.getValue().toString();
            st.setString(3,c);
            
            int count1=st.executeUpdate();
            if(count1>0){
               JOptionPane.showMessageDialog(null, "Workingday is updated");
               Clear();
            }
               
        } catch (Exception e) {
           
             JOptionPane.showMessageDialog(null,"Workingday is not updated" );
           
        } 

    }//GEN-LAST:event_jButton4ActionPerformed

    private void monActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_monActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_monActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(AddWorkingDaysHours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(AddWorkingDaysHours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(AddWorkingDaysHours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(AddWorkingDaysHours.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new AddWorkingDaysHours().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JSpinner Hour;
    private javax.swing.JCheckBox aaa;
    private javax.swing.JButton btnUpdate;
    private javax.swing.ButtonGroup buttonGroup1;
    private javax.swing.JCheckBox fri;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JInternalFrame jInternalFrame1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JSpinner mini;
    private javax.swing.JCheckBox mon;
    private javax.swing.JPanel panel;
    private javax.swing.JCheckBox sat;
    private javax.swing.JCheckBox sun;
    private javax.swing.JCheckBox thu;
    private javax.swing.JCheckBox tue;
    private javax.swing.JCheckBox wed;
    private javax.swing.JSpinner workingDays;
    // End of variables declaration//GEN-END:variables
}
